# Options for analysis running.
run:
  # Timeout for analysis, e.g. 30s, 5m.
  timeout: 5m
  # Exit code when at least one issue was found.
  issues-exit-code: 1
  # Include test files or not.
  tests: true
  go: '1.23.0'

linters:
  # Enable specific linters
  # No idea what these do? Check the documentation out: https://golangci-lint.run/usage/linters/
  enable:
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - typecheck
    - unused
    - asciicheck
    - bodyclose
    - misspell
    - unparam
    - revive
    - cyclop
    - copyloopvar
    - usestdlibvars
    - unconvert
    - thelper
    - funlen
    - godot
    - godox
    - gofumpt
    - lll
    - wsl
    - revive
    - wrapcheck
    - perfsprint
    - varnamelen

linters-settings:
  cyclop:
    # The maximal code complexity to report.
    # Default: 10
    max-complexity: 11
  funlen:
    # The maximal function length to report.
    # Default: 30
    max-func-len: 100


issues:
  # List of regexps of issue texts to exclude.
  exclude:
    - composite
  # Which dirs to skip: issues from them won't be reported.
  # Can use regexp here: `generated.*`, regexp is applied on full path.
  # Default value is empty list,
  # but default dirs are skipped independently of this option's value (see skip-dirs-use-default).
  # "/" will be replaced by current OS file path separator to properly work on Windows.
  exclude-dirs:
    - "cache|tmp|go"

